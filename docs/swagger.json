{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server for a pet store.",
        "title": "My Awesome API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/admin/answers": {
            "get": {
                "description": "Returns a list of all student answers",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "answers"
                ],
                "summary": "Get all student answers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Answer"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/answers/{id}": {
            "delete": {
                "description": "Deletes a student answer by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "answers"
                ],
                "summary": "Delete a student answer",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Answer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/phrase_types": {
            "get": {
                "description": "Returns all phrase types",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "phrase_types"
                ],
                "summary": "Get all phrase types",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.PhraseType"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new phrase type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "phrase_types"
                ],
                "summary": "Create new phrase type",
                "parameters": [
                    {
                        "description": "New Phrase Type",
                        "name": "phrase_type",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.PhraseType"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ID of created phrase type",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/phrases": {
            "get": {
                "description": "Returns a list of all phrases",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "phrases"
                ],
                "summary": "Get all phrases",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Поисковый текст",
                        "name": "text",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Phrase"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Adds a new phrase to the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "phrases"
                ],
                "summary": "Create a new phrase",
                "parameters": [
                    {
                        "description": "New Phrase",
                        "name": "phrase",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreatePhraseRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/phrases/{id}": {
            "get": {
                "description": "Returns a phrase by its UUID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "phrases"
                ],
                "summary": "Get a phrase by ID",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Phrase ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Phrase"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Updates an existing phrase",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "phrases"
                ],
                "summary": "Update a phrase by ID",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Phrase ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated Phrase",
                        "name": "phrase",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Phrase"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Phrase"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a phrase from the system",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "phrases"
                ],
                "summary": "Delete a phrase by ID",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Phrase ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Выполняет вход пользователя в систему и возвращает информацию об успешной аутентификации",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Аутентификация пользователя",
                "parameters": [
                    {
                        "description": "Данные для входа (логин и пароль)",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LoginUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешная аутентификация\" {",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Неверный формат запроса\" {",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Неверные учетные данные\" {",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/student/scenarios/answer": {
            "post": {
                "description": "Saves a student's audio answer to a phrase stream",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scenarios"
                ],
                "summary": "Create a student answer",
                "parameters": [
                    {
                        "description": "Student audio answer data",
                        "name": "answer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateAnswerRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created answer ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/student/scenarios/create": {
            "post": {
                "description": "Creates a new scenario for a student",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scenarios"
                ],
                "summary": "Create a new scenario",
                "parameters": [
                    {
                        "description": "Scenario data",
                        "name": "scenario",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateScenarioRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created scenario ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/student/scenarios/phrase/listen": {
            "post": {
                "description": "Initializes a new phrase stream and stores associated audio",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scenarios"
                ],
                "summary": "Create a phrase stream",
                "parameters": [
                    {
                        "description": "Phrase stream data",
                        "name": "phraseStream",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreatePhraseStreamRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created phrase stream ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/student/{user_id}/get_phrases": {
            "get": {
                "description": "Returns a list of phrases associated with the given user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "progress"
                ],
                "summary": "Get student phrases",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Phrase"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid user ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/student/{user_id}/phrase/get_progress": {
            "get": {
                "description": "Returns progress data for the user's phrase practice",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "progress"
                ],
                "summary": "Get phrase progress",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.PhraseProgress"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid user ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users/register": {
            "post": {
                "description": "Создает нового пользователя в системе",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Регистрация нового пользователя",
                "parameters": [
                    {
                        "description": "Данные для регистрации",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ID созданного пользователя",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "Неверный формат данных",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.Answer": {
            "type": "object",
            "properties": {
                "audio_answer_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_correct": {
                    "type": "boolean"
                },
                "text": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "domain.Phrase": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "phrase_type": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "type_id": {
                    "type": "string"
                }
            }
        },
        "domain.PhraseType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.CreateAnswerRequest": {
            "type": "object",
            "properties": {
                "path": {
                    "type": "string"
                },
                "phrase_stream_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.CreatePhraseRequest": {
            "type": "object",
            "properties": {
                "text": {
                    "type": "string"
                },
                "type_id": {
                    "type": "string"
                }
            }
        },
        "models.CreatePhraseStreamRequest": {
            "type": "object",
            "properties": {
                "accent": {
                    "type": "string"
                },
                "noise": {
                    "type": "number"
                },
                "path": {
                    "type": "string"
                },
                "phrase_id": {
                    "type": "string"
                },
                "scenario_id": {
                    "type": "string"
                }
            }
        },
        "models.CreateScenarioRequest": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.CreateUserRequest": {
            "type": "object",
            "properties": {
                "is_admin": {
                    "type": "boolean"
                },
                "login": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "models.LoginUserRequest": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "models.PhraseProgress": {
            "type": "object",
            "properties": {
                "phrase": {
                    "type": "string"
                },
                "phrase_stream_status": {
                    "type": "string"
                },
                "scenario_status": {
                    "type": "string"
                }
            }
        }
    }
}